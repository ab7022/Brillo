// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int               @id @default(autoincrement())
  name               String
  email              String            @unique
  password           String?
  profile_url        String?
  premium_user       Boolean           @default(false)
  validity           DateTime?
  admin              Boolean           @default(false)
  createdAt          DateTime          @default(now())
  provider           String
  projects           Project[]
  skills             Skill[]
  education          Education[]
  workExperiences    WorkExperience[]
  languages          Language[]
  contactInfo        ContactInfo[]
  achievements       Achievement[]
  subscriptionPlan   SubscriptionPlan? @relation(fields: [subscriptionPlanId], references: [id])
  subscriptionPlanId Int?
}

model SubscriptionPlan {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  validity    Int
  createdAt   DateTime @default(now())
  User        User[]
}

model Education {
  id                  Int      @id @default(autoincrement())
  Education_title     String
  Education_institute String
  Education_location  String
  Education_duration  DateTime
  user                User     @relation(fields: [userId], references: [id])
  userId              Int
}

model Language {
  id            Int    @id @default(autoincrement())
  language_name String
  user          User   @relation(fields: [userId], references: [id])
  userId        Int
}

model WorkExperience {
  id               Int      @id @default(autoincrement())
  company_name     String
  designation      String
  duration         DateTime
  location         String
  work_description String
  user             User     @relation(fields: [userId], references: [id])
  userId           Int
}

model Skill {
  id         Int    @id @default(autoincrement())
  skill_name String
  user       User   @relation(fields: [userId], references: [id])
  userId     Int
}

model Project {
  id                   Int    @id @default(autoincrement())
  project_title        String
  project_techstack    String
  project_description  String
  project_deployed_url String
  project_github_url   String
  project_image        String
  project_tags         String
  user                 User   @relation(fields: [userId], references: [id])
  userId               Int
}

model ContactInfo {
  id               Int    @id @default(autoincrement())
  first_name       String
  last_name        String
  social_github    String
  social_linkedin  String
  social_twitter   String
  designation      String
  short_intro      String
  social_instagram String
  social_mail      String
  phone_number     String
  address          String
  website_url      String
  user             User   @relation(fields: [userId], references: [id])
  userId           Int
}

// model Interest {
//   id     Int    @id @default(autoincrement())
//   name   String
//   user   User   @relation(fields: [userId], references: [id])
//   userId Int
// }

model Achievement {
  id          Int    @id @default(autoincrement())
  description String
  user        User   @relation(fields: [userId], references: [id])
  userId      Int
}
