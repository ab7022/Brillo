// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  name            String
  email           String           @unique
  profile_url     String?
  premium_user    Boolean          @default(false)
  validity        DateTime?
  admin           Boolean          @default(false)
  createdAt       DateTime         @default(now())
  intros          Intro[]
  socials         Social[]
  projects        Project[]
  skills          Skill[]
  education       Education[]
  workExperiences WorkExperience[]
  languages       Language[]
  certifications  Certification[]
  contactInfo        ContactInfo[]
  interests          Interest[]
  achievements       Achievement[]
  subscriptionPlan   SubscriptionPlan? @relation(fields: [subscriptionPlanId], references: [id])
  subscriptionPlanId Int?
}

model SubscriptionPlan {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  validity    Int
  createdAt   DateTime @default(now())
  User        User[]
}

model Intro {
  id          Int    @id @default(autoincrement())
  designation String
  short_intro String
  long_intro  String
  user        User   @relation(fields: [userId], references: [id])
  userId      Int
}

model Education {
  id                    Int      @id @default(autoincrement())
  Education_name        String
  Education_description String
  Education_location    String
  Education_start_date  DateTime
  Education_end_date    DateTime

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model Language {
  id            Int    @id @default(autoincrement())
  language_name String
  user          User   @relation(fields: [userId], references: [id])
  userId        Int
}

model WorkExperience {
  id           Int      @id @default(autoincrement())
  company_name String
  role         String
  start_date   DateTime
  end_date     DateTime
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
}

model Skill {
  id         Int    @id @default(autoincrement())
  skill_name String
  user       User   @relation(fields: [userId], references: [id])
  userId     Int
}

model Social {
  id               Int    @id @default(autoincrement())
  social_github    String
  social_linkedin  String
  social_twitter   String
  social_instagram String
  social_mail      String
  user             User   @relation(fields: [userId], references: [id])
  userId           Int
}

model Project {
  id                  Int    @id @default(autoincrement())
  project_name        String
  project_description String
  project_url         String
  project_image       String
  project_tags        String
  user                User   @relation(fields: [userId], references: [id])
  userId              Int
}

model ContactInfo {
  id           Int    @id @default(autoincrement())
  phone_number String
  address      String
  website_url  String
  user         User   @relation(fields: [userId], references: [id])
  userId       Int
}

model Interest {
  id     Int    @id @default(autoincrement())
  name   String
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

model Achievement {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  user        User   @relation(fields: [userId], references: [id])
  userId      Int
}

model Certification {
  id                        Int    @id @default(autoincrement())
  certification_name        String
  certification_description String
  certification_url         String
  user                      User   @relation(fields: [userId], references: [id])
  userId                    Int
}
